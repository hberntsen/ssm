package nl.uu.cs.ssmui;import java.awt.Dimension;import javax.swing.JMenuBar;public class SSMRunner2 extends javax.swing.JFrame {	private static final long serialVersionUID = 1L ;// IMPORTANT: Source code between BEGIN/END comment pair will be regenerated// every time the form is saved. All manual changes will be overwritten.// BEGIN GENERATED CODE	// member declarations	javax.swing.JToolBar ssmToolBar = new javax.swing.JToolBar();	javax.swing.JSplitPane memNRestSplitPane = new javax.swing.JSplitPane();	javax.swing.JSplitPane codeNStackSplitPane = new javax.swing.JSplitPane();	javax.swing.JTable codeTable = new javax.swing.JTable();	javax.swing.JTable stackTable = new javax.swing.JTable();	javax.swing.JSplitPane statusNOutputSplitPane = new javax.swing.JSplitPane();	javax.swing.JTable statusTable = new javax.swing.JTable();	javax.swing.JTextArea outputTextArea = new javax.swing.JTextArea();// END GENERATED CODE	public SSMRunner2() {	}	public void initComponents() throws Exception {// IMPORTANT: Source code between BEGIN/END comment pair will be regenerated// every time the form is saved. All manual changes will be overwritten.// BEGIN GENERATED CODE		// the following code sets the frame's initial state		ssmToolBar.setSize(new java.awt.Dimension(600, 32));		ssmToolBar.setLocation(new java.awt.Point(0, 0));		ssmToolBar.setVisible(true);		ssmToolBar.setLayout(null);		memNRestSplitPane.setDividerLocation(500);		memNRestSplitPane.setSize(new java.awt.Dimension(849, 670));		memNRestSplitPane.setDividerSize(8);		memNRestSplitPane.setLocation(new java.awt.Point(0, 32));		memNRestSplitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);		memNRestSplitPane.setVisible(true);		codeNStackSplitPane.setDividerLocation(400);		codeNStackSplitPane.setDividerSize(6);		codeNStackSplitPane.setVisible(true);		codeTable.setVisible(true);		stackTable.setVisible(true);		stackTable.setPreferredScrollableViewportSize(new java.awt.Dimension(400, 400));		statusNOutputSplitPane.setDividerLocation(80);		statusNOutputSplitPane.setDividerSize(6);		statusNOutputSplitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);		statusNOutputSplitPane.setVisible(true);		statusTable.setVisible(true);		statusTable.setPreferredScrollableViewportSize(new java.awt.Dimension(830, 200));		outputTextArea.setVisible(true);		outputTextArea.setText("outputTextArea");		setLocation(new java.awt.Point(0, 0));		getContentPane().setLayout(null);		setTitle("Simple Stack Machine Interpreter(2)");		memNRestSplitPane.add(codeNStackSplitPane, javax.swing.JSplitPane.TOP);		memNRestSplitPane.add(statusNOutputSplitPane, javax.swing.JSplitPane.BOTTOM);		codeNStackSplitPane.add(codeTable, javax.swing.JSplitPane.LEFT);		codeNStackSplitPane.add(stackTable, javax.swing.JSplitPane.RIGHT);		statusNOutputSplitPane.add(statusTable, javax.swing.JSplitPane.TOP);		statusNOutputSplitPane.add(outputTextArea, javax.swing.JSplitPane.BOTTOM);		getContentPane().add(ssmToolBar);		getContentPane().add(memNRestSplitPane);		setSize(new java.awt.Dimension(850, 700));		// event handling		addWindowListener(new java.awt.event.WindowAdapter() {			public void windowClosing(java.awt.event.WindowEvent e) {				thisWindowClosing(e);			}		});// END GENERATED CODE	}    	private boolean mShown = false;  		public void addNotify() {		super.addNotify();				if (mShown)			return;					// resize frame to account for menubar		JMenuBar jMenuBar = getJMenuBar();		if (jMenuBar != null) {			int jMenuBarHeight = jMenuBar.getPreferredSize().height;			Dimension dimension = getSize();			dimension.height += jMenuBarHeight;			setSize(dimension);		}		mShown = true;	}	// Close the window when the close box is clicked	void thisWindowClosing(java.awt.event.WindowEvent e) {		setVisible(false);		dispose();		System.exit(0);	}	}